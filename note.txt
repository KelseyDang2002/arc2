1. bin -> www -> server root directory
    - compiled code

2. public folders
    - assets
    - stylesheets
    - scripts

3. routes
    - all your modules
        - manually created all modules and routes etc.
    - class (variables, methods, classes, etc.)
        - data

4. views
    - template files (HTML code)
        - views = UI code
            - jade
            - pug
            - ejs
        - you will see the extension used
            - .jade
        
        - can we change this once we have created?
            - yes

        - every view template maps to a route file

        - the view template is a static HTML code where we will replace the values/data dynamically

5. app.js (the heart of the application)
    - import your modules
    - add the required modules and packages etc

6. package.json
    - all dependencies
    - scripts for starting, testing, etc.

7. npm i (install dependencies)
    - we should see a node_modules folder

8. npm run start (start application)

Templates
    Express/Node backend use cases
        API layer
            - expose only APIs or endpoints
        Full feldge application including both backend and UI
            - endpoints along with UI templates

Template Engine
    Enable you to use static template files in application
    Template is fixed, only the data changes

    Types:
        - EJS
        - Pug
        - Jade
        - Moustache

    To create a new app with a specific template run:
        express view = pug myapp
